(require racket/list)
(define (alle-kleineren val in)
	(define (flatten in)
		(cond
			((null? in) '())
			((pair? in) (append (flatten (car in) (flatten (cdr in)))))
			(else (list in))
		)
	)
	(filter (lambda (x) (< x val)) (flatten in))
)
(alle-kleineren 4 '((7 2 (3 40)) (3 4 (2 3 (9)))))
(alle-kleineren 3 '((3 4 (6 3 (9)) 8)))
(alle-kleineren 22 '((19 20) (21 22) (23 24)))